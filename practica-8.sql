DROP DATABASE IF EXISTS StockArticulos;

CREATE DATABASE StockArticulos;
USE StockArticulos;

CREATE TABLE Articulos(
	ID INT PRIMARY KEY, 
	NOMBRE VARCHAR(100),
	STOCK FLOAT(18,2)
);

CREATE TABLE Movimientos(
	TRANSACCION INT PRIMARY KEY,
	FECHA DATE DEFAULT CURRENT_TIMESTAMP,
	ARTICULO_ID INT NOT NULL,
	CANTIDAD FLOAT(18,2),
	TIPO CHAR(1) CHECK (TIPO IN ('S', 'E')),
	FOREIGN KEY (ARTICULO_ID) REFERENCES Articulos(ID)
);

INSERT INTO Articulos(ID,NOMBRE,STOCK) VALUES
	(1, "Monitores",0),
	(2, "CPU",0),
	(3,"Mouse",0);

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;

DELIMITER //

CREATE TRIGGER MovimientosInsert
AFTER INSERT ON Movimientos
FOR EACH ROW
BEGIN
	UPDATE Articulos
	SET STOCK = (	
		SELECT COALESCE(SUM(CASE WHEN TIPO ='E' THEN CANTIDAD ELSE -CANTIDAD END),0) AS PARCIAL
		FROM Movimientos
		INNER JOIN Articulos ON Articulos.ID = Movimientos.ARTICULO_ID
		WHERE ARTICULO_ID = NEW.ARTICULO_ID
	)
	WHERE ID = NEW.ARTICULO_ID;
END;

CREATE TRIGGER MovimientosDelete
AFTER DELETE On Movimientos
FOR EACH ROW
BEGIN
	UPDATE Articulos
	SET STOCK = (	
		SELECT COALESCE(SUM(CASE WHEN TIPO ='E' THEN CANTIDAD ELSE -CANTIDAD END),0) AS PARCIAL
		FROM Movimientos
		INNER JOIN Articulos ON Articulos.ID = Movimientos.ARTICULO_ID
		WHERE ARTICULO_ID = OLD.ARTICULO_ID
	)
	WHERE ID = OLD.ARTICULO_ID;
END;//

DELIMITER ;

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;

INSERT INTO Movimientos(TRANSACCION, ARTICULO_ID, FECHA, CANTIDAD, TIPO) 
VALUES
	(1,1,CURRENT_TIMESTAMP,100,'E'),
	(2,2,CURRENT_TIMESTAMP,50,'E');

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;

INSERT INTO Movimientos (TRANSACCION, ARTICULO_ID, FECHA, CANTIDAD, TIPO)
VALUES (3, 1, CURRENT_TIMESTAMP, 100, 'E'),
       (4, 2, CURRENT_TIMESTAMP, 5, 'E'),
       (5, 2, CURRENT_TIMESTAMP, 5, 'S'),
       (6, 2, CURRENT_TIMESTAMP, 5, 'S'),
       (7, 1, CURRENT_TIMESTAMP, 200, 'S');

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;

SELECT ARTICULO_ID, SUM(CASE WHEN TIPO='E' THEN CANTIDAD 
    	                     ELSE -CANTIDAD END) AS PARCIAL
FROM Movimientos
    GROUP BY ARTICULO_ID;

INSERT INTO Movimientos(TRANSACCION, ARTICULO_ID, FECHA, CANTIDAD, TIPO) 
VALUES
	(8,1,CURRENT_TIMESTAMP,10,'E');

INSERT INTO Movimientos(TRANSACCION, ARTICULO_ID, FECHA, CANTIDAD, TIPO)
VALUES 
	(9,3, CURRENT_TIMESTAMP, 5, 'S'),
	(10,2,CURRENT_TIMESTAMP, 5, 'E');

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;

-- IMPORTANT
SELECT "DELETES" AS "INFO";

DELETE FROM Movimientos WHERE TRANSACCION = 1;

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;

DELETE FROM Movimientos WHERE TRANSACCION = 4;

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;

DELETE FROM Movimientos;

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;


DROP TRIGGER IF EXISTS MovimientosInsert;
DROP TRIGGER IF EXISTS MovimientosDelete;

SELECT Ar.ID,Ar.NOMBRE,Ar.STOCK FROM Articulos Ar;

INSERT INTO Movimientos(TRANSACCION, ARTICULO_ID, FECHA, CANTIDAD, TIPO)
VALUES (12,1,CURRENT_TIMESTAMP,100,'E');

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;

DELIMITER //

CREATE TRIGGER MovimientosInsert
AFTER INSERT ON Movimientos
FOR EACH ROW
BEGIN
	UPDATE Articulos
	SET STOCK = STOCK + (	
		SELECT SUM(CASE WHEN TIPO ='E' THEN CANTIDAD ELSE -CANTIDAD END) AS PARCIAL
		FROM Movimientos
		INNER JOIN Articulos ON Articulos.ID = Movimientos.ARTICULO_ID
		WHERE ARTICULO_ID = Articulos.ID
	)
	WHERE ID = NEW.ARTICULO_ID;
END;

CREATE TRIGGER MovimientosDelete
AFTER DELETE On Movimientos
FOR EACH ROW
BEGIN
	UPDATE Articulos
	SET STOCK = STOCK + (	
		SELECT SUM(CASE WHEN TIPO ='E' THEN CANTIDAD ELSE -CANTIDAD END) AS PARCIAL
		FROM Movimientos
		INNER JOIN Articulos ON Articulos.ID = Movimientos.ARTICULO_ID
		WHERE ARTICULO_ID = Articulos.ID
	)
	WHERE ID = OLD.ARTICULO_ID;
END;//

DELIMITER ;

INSERT INTO Movimientos (TRANSACCION, ARTICULO_ID, FECHA, CANTIDAD, TIPO) 
VALUES (13, 1, CURRENT_TIMESTAMP, 100, 'E');

SELECT Ar.ID, Ar.NOMBRE, Ar.STOCK FROM Articulos Ar;
SELECT * FROM Movimientos;
